enclave {
    include "types.h"
    from "Enclave_backward.edl" import *;
    from "types.edl" import *;
    from "Enclave_forward.edl" import *;
    from "sgx_pthread.edl" import *;
    from "sgx_tstdc.edl" import *;

    trusted{
       public void test([in, count = n_len]     uint8_t* n, size_t n_len, 
                        [in, count = e_len]     uint8_t* e, size_t e_len,
                        [out, count=n_len]      uint8_t* cipherout,
                        [out, count=en_mes_len] uint8_t* en_mes, size_t en_mes_len,
                        [out, count=iv_len]     uint8_t* iv, size_t iv_len);
    };
    
    untrusted {
        void ocall_print_string([in, string] const char *str);
        void ocall_print_string2hex([in, count=n]const char *str, int n);

        void gemm_segmentation(int TA, int TB, int M, int N, int K, float ALPHA, 
            [in, count=1] float** A, int lda, 
            [in, count=1] float** B, int ldb,
            float BETA,
            [in, count=1] float** C, int ldc);
    };
};
